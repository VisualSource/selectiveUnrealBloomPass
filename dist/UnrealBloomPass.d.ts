import { Vector2, WebGLRenderTarget } from 'three';
import { Pass } from 'three/examples/jsm/postprocessing/Pass';
export declare class SelectiveUnrealBloomPass extends Pass {
    resolution: Vector2;
    strength: number;
    radius: number;
    threshold: number;
    selective: boolean;
    scene?: import("three").Scene | undefined;
    camera?: import("three").Camera | undefined;
    static BlurDirectionX: Vector2;
    static BlurDirectionY: Vector2;
    private bloom_layer;
    private save_materials;
    private clearColor;
    private _oldClearColor;
    private oldClearAlpha;
    private fsQuad;
    private renderTargetsHorizontal;
    private renderTargetsVertical;
    private nMips;
    private renderTargetBright;
    private materialHighPassFilter;
    private compositeMaterial;
    private blendMaterial;
    private materialCopy;
    private renderTargetSelectedObjects;
    private basic;
    private separableBlurMaterials;
    private bloomTintColors;
    private copyUniforms;
    private highPassUniforms;
    constructor(resolution?: Vector2, strength?: number, radius?: number, threshold?: number, selective?: boolean, bloomlayer?: number, scene?: import("three").Scene | undefined, camera?: import("three").Camera | undefined);
    dispose(): void;
    setSize(width: number, height: number): void;
    render(renderer: THREE.WebGLRenderer, writeBuffer: WebGLRenderTarget, readBuffer: WebGLRenderTarget, deltaTime: number, maskActive: boolean): void;
    private createBlendMaterial;
    private getCompositeMaterial;
    private getSeperableBlurMaterial;
    private darkenNonBloom;
    private restoreMaterial;
}
